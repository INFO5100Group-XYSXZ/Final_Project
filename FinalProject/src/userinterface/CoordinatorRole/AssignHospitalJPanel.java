/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CoordinatorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.RescueEnterprise;
import Business.Network.Network;
import Business.Organization.AnimalHospitalOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AnimalRecord;
import Business.WorkQueue.HospitalRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import userinterface.GoogleMap.DistanceMap;

/**
 *
 * @author zhaoxi
 */
public class AssignHospitalJPanel extends javax.swing.JPanel {

    private JPanel container;
    EcoSystem system;
    AnimalRecord animalRecord;
    
    /**
     * Creates new form AssignVetJPanel
     */
    public AssignHospitalJPanel(JPanel container, EcoSystem sys, AnimalRecord ar) {
        initComponents();
        this.container = container;
        this.system = sys;
        this.animalRecord = ar;
        
        popTable();       
        displayInfo();
    }

        public void popTable(){
        DefaultTableModel model = (DefaultTableModel)tblHospital.getModel();
        model.setRowCount(0);
        
        for (Network n : system.getNetworkList()) {        
        
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                //System.out.println(e.getWorkQueue().getWorkRequestList().size());
                if (e instanceof RescueEnterprise) {
                    //System.out.println("in rescue enterprise"); //test
                    for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof AnimalHospitalOrganization) {
                            
                            System.out.println("assign hos: " + org.getLocationP());  //test
                             
                                   Object row[] = new Object[4];
                                   row[0] = org;
                                   row[1] = org.getOrganizationID();
                                   row[2] = org.getEmployeeDirectory().getEmployeeList().size(); // this is size of whole organization
                                   row[3] = org.getWorkQueue().getWorkRequestList().size();
                                   ((DefaultTableModel)tblHospital.getModel()).addRow(row);
                        }
                    }
                }
            }
        }
    }
        
    public void displayInfo(){
    ListSelectionModel model = tblHospital.getSelectionModel();
    model.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    model.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            int row = tblHospital.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a hospital from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        comboAdmin.removeAllItems();
        Organization org = (Organization)tblHospital.getValueAt(row, 0);
        for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
            System.out.println("combo role: " + ua.getRole()); //test
            if (ua.getRole().toString().equals("HospitalAdmin") ) {
                comboAdmin.addItem(ua);
            }
        }
      }
    });
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAssign = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospital = new javax.swing.JTable();
        txtViewMap = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        comboAdmin = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnAssign.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-clinic.png"))); // NOI18N
        btnAssign.setBorderPainted(false);
        btnAssign.setContentAreaFilled(false);
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        tblHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Animal Hospital", "Organization ID", "Number of Available Vets", "# of Task"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHospital);
        if (tblHospital.getColumnModel().getColumnCount() > 0) {
            tblHospital.getColumnModel().getColumn(0).setResizable(false);
            tblHospital.getColumnModel().getColumn(1).setResizable(false);
            tblHospital.getColumnModel().getColumn(2).setResizable(false);
            tblHospital.getColumnModel().getColumn(3).setResizable(false);
        }

        txtViewMap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setLocation.png"))); // NOI18N
        txtViewMap.setBorderPainted(false);
        txtViewMap.setContentAreaFilled(false);
        txtViewMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewMapActionPerformed(evt);
            }
        });

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setBorderPainted(false);
        btnBack.setDefaultCapable(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Message to hospital:");

        jLabel2.setText("Please Choose A Hospital Admin");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/animalHospital.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtViewMap, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(286, 286, 286))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)))
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1131, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAssign, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtViewMap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(216, 216, 216))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(443, 443, 443)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AssignedCaseJPanel nacjp = (AssignedCaseJPanel) component;
        nacjp.popTable();
        nacjp.reset();
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int row = tblHospital.getSelectedRow();
        if(row<0) {
             JOptionPane.showMessageDialog(null, "Please select a hosptail from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Organization org = (Organization)tblHospital.getValueAt(row, 0);        
        UserAccount ua = (UserAccount)comboAdmin.getSelectedItem();
        
        if (txtMessage.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Please write a message to hospital", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (ua == null) {
            JOptionPane.showMessageDialog(null, "Please select an hospital admin", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }     
        
        animalRecord.getHospitalRequest().setHospitalOrg(org);
        animalRecord.getHospitalRequest().setStatus("Hospital Assigned");
        animalRecord.addMessage("Coordinator assign hospital. Message: " + txtMessage.getText());
        animalRecord.getHospitalRequest().setLatestMessage(txtMessage.getText());        
        ua.getWorkQueue().getWorkRequestList().add(animalRecord);
        org.getWorkQueue().getWorkRequestList().add(animalRecord);
        
        JOptionPane.showMessageDialog(null, "Request sent to Hospital Administrator !");
        popTable();
        //System.out.println(org.getLocationP());
        //System.out.println(org.getLocationP().getLatitude());
    }//GEN-LAST:event_btnAssignActionPerformed

    private void txtViewMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewMapActionPerformed
        // TODO add your handling code here:
        int row = tblHospital.getSelectedRow();
        if(row<0) {
             JOptionPane.showMessageDialog(null, "Please select a hospital from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       Organization hos = (Organization) tblHospital.getValueAt(row, 0);
        
        String coordinates = "['" + hos.getName() + " Location'," 
                + hos.getLocationP().getLatitude() + ", " 
                + hos.getLocationP().getLongitude() + "]";
        
        //System.out.println("===---->>> coordinates is " + coordinates.substring(0, coordinates.length()-1));
        DistanceMap.openMap(coordinates);
    }//GEN-LAST:event_txtViewMapActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox comboAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHospital;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JButton txtViewMap;
    // End of variables declaration//GEN-END:variables
}
